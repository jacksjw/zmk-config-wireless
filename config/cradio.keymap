/*
 * Copyright (c) 2020 The ZMK Contributors
 * goat
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10

#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define MOUSE 5

#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT
#define U_WH_U &msc SCRL_UP
#define U_WH_D &msc SCRL_DOWN
#define U_WH_L &msc SCRL_LEFT
#define U_WH_R &msc SCRL_RIGHT

//&mt {
    // flavor = "tap-preferred";
    // tapping_term_ms = <200>;
//};

 /{ 
chosen {
        zmk,charmap = &charmap_us;
    };
    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };
        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <RIG LEF>;
            then-layer = <TRI>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
                
       	layer_default {
            bindings = <
            &kp Q    &kp W &kp E &kp R     &kp T            &kp Y   &kp U  &kp I &kp O         &kp P 
            &kp A    &kp S &kp D &kp F     &kp G            &kp H   &kp J  &kp K &kp L         &kp BACKSPACE
            &kp LALT &kp Z &kp X &kp C     &kp V            &kp B   &kp N  &kp M &mt LGUI  DEL &kp ENTER
                                 &kp LCTRL &kp LSHFT  	    &kp SPC &mlt 1 1 
            >;
		};

       	layer_symbols {
            bindings = <
            &kp GRAVE &kp LBKT  &kp UP   &kp RBKT     &kp NON_US_BACKSLASH        &kp N7    &kp N8 &kp N9 &kp N0    &kp NON_US_HASH
            &kp TAB   &kp LEFT  &kp DOWN &kp RIGHT    &kp SEMI                    &kp N4    &kp N5 &kp N6 &kp MINUS &kp BACKSPACE 
            &kp LALT  &kp COMMA &kp APOS &kp PERIOD   &kp FSLH                    &kp N1    &kp N2 &kp N3 &kp EQUAL  &kp ENTER 
                                         &mtt LCTRL 0 &kp LSHFT                   &kp SPACE &mtt LC(LS(LALT)) 2 
            >;
		};	
		
		layer_etc {
            bindings = <
            &kp ESC     &kp HOME      &kp F22       &kp INS       &kp C_VOL_UP        &kp PRINTSCREEN &kp F1 &kp F2  &kp F3  &kp F4
            &kp F23     &kp C_PREV    &kp C_PP      &kp C_NEXT    &kp C_VOL_DN        &kp K_CALC      &kp F5 &kp F6  &kp F7  &kp F8 
            &bt BT_CLR  &bt BT_SEL(0) &bt BT_SEL(1) &bt BT_SEL(2) &kp C_MUTE          &kp CAPS        &kp F9 &kp F10 &kp F11 &kp F12   
                                                    &mtt LCTRL 0  &kp LSHFT  		  &kp SPACE       &kp LC(LS(LALT))
            >;
		};	
        
	
        
	};
};
